---
title: "Today's Bets"
execute:
  echo: false
  message: false
  warning: false
author: "James Brown"
date: "`r Sys.Date()`"
format:
  html:
    df-print: kable
    theme: cosmo
    self-contained: true
    toc: true
    toc-depth: 3
    fig-width: 8
    fig-height: 6
editor: visual
---

```{r}
library(tidyverse)
library(glue)

# Read in all odds
all_files <- list.files("../Data/processed_odds")

# Read in a loop
for (file in all_files) {
  assign(str_remove(file, ".rds"), read_rds(glue("../Data/processed_odds/{file}")))
}

# Get offensive rating and pace vs opposition
opp_stats <- read_rds("../Data/stats_vs_opp_today_med.rds")

# Normalise rolling averages to have mean zero
opp_stats <-
opp_stats |> 
  ungroup() |>
  mutate_at(vars(contains("rolling")), ~ .x - mean(.x, na.rm = TRUE)) |> 
  group_by(oppositionTeam) |>
  slice_tail(n = 1) |> 
  ungroup() |> 
  select(date, oppositionTeam, contains("rolling"))

# Change name of clippers
opp_stats <-
  opp_stats |> 
  mutate(oppositionTeam = ifelse(oppositionTeam == "LA Clippers", "Los Angeles Clippers", oppositionTeam))

# Join opp stats with lines files
all_player_points <-
  all_player_points |>
  left_join(opp_stats, by = c("opposition_team" = "oppositionTeam")) |> 
  mutate(fixture_difficulty = rolling_15_game_points)

all_player_assists <-
  all_player_assists |>
  left_join(opp_stats, by = c("opposition_team" = "oppositionTeam")) |> 
  mutate(fixture_difficulty = rolling_15_game_assists)

all_player_rebounds <-
  all_player_rebounds |>
  left_join(opp_stats, by = c("opposition_team" = "oppositionTeam")) |> 
  mutate(fixture_difficulty = rolling_15_game_rebounds)

all_player_threes <-
  all_player_threes |>
  left_join(opp_stats, by = c("opposition_team" = "oppositionTeam")) |> 
  mutate(fixture_difficulty = rolling_15_game_threes)

all_player_steals <-
  all_player_steals |>
  left_join(opp_stats, by = c("opposition_team" = "oppositionTeam")) |> 
  mutate(fixture_difficulty = rolling_15_game_steals)

all_player_blocks <-
  all_player_blocks |>
  left_join(opp_stats, by = c("opposition_team" = "oppositionTeam")) |> 
  mutate(fixture_difficulty = rolling_15_game_blocks)

all_player_pras <-
  all_player_pras |>
  left_join(opp_stats, by = c("opposition_team" = "oppositionTeam")) |> 
  mutate(fixture_difficulty = rolling_15_game_PRAs)


```

```{r}

#===============================================================================
# Player Points
#===============================================================================

# Overs--------------------------------------------------------------
all_player_points_overs <-
  all_player_points |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(over_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(over_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_over) - min(implied_prob_over)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_points_overs_to_bet <-
  all_player_points_overs |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_over_last_10 >= 0.1 & diff_over_2023_24 >= 0.05) |> 
  filter(over_price >= 1.3)

# Unders-------------------------------------------------------------
all_player_points_unders <-
  all_player_points |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |>
  filter(!is.na(under_price)) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(under_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(under_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_under) - min(implied_prob_under)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_points_unders_to_bet <-
  all_player_points_unders |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_under_last_10 >= 0.05 & diff_under_2023_24 >= 0.05) |> 
  filter(under_price >= 1.3)

#===============================================================================
# Player Rebounds
#===============================================================================

# Overs--------------------------------------------------------------
all_player_rebounds_overs <-
  all_player_rebounds |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(over_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(over_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_over) - min(implied_prob_over)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_rebounds_overs_to_bet <-
  all_player_rebounds_overs |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_over_last_10 >= 0.1 & diff_over_2023_24 >= 0.05) |> 
  filter(over_price >= 1.3) 

# Unders-------------------------------------------------------------
all_player_rebounds_unders <-
  all_player_rebounds |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |>
  filter(!is.na(under_price)) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(under_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(under_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_under) - min(implied_prob_under)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_rebounds_unders_to_bet <-
  all_player_rebounds_unders |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_under_last_10 >= 0.05 & diff_under_2023_24 >= 0.05) |> 
  filter(under_price >= 1.3)

#===============================================================================
# Player Assists
#===============================================================================

# Overs--------------------------------------------------------------
all_player_assists_overs <-
  all_player_assists |>
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(over_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(over_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_over) - min(implied_prob_over)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_assists_overs_to_bet <-
  all_player_assists_overs |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_over_last_10 >= 0.1 & diff_over_2023_24 >= 0.05) |> 
  filter(over_price >= 1.3) 

# Unders-------------------------------------------------------------
all_player_assists_unders <-
  all_player_assists |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |>
  filter(!is.na(under_price)) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(under_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(under_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_under) - min(implied_prob_under)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_assists_unders_to_bet <-
  all_player_assists_unders |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_under_last_10 >= 0.05 & diff_under_2023_24 >= 0.05) |> 
  filter(under_price >= 1.3)

#===============================================================================
# Player PRAs
#===============================================================================

# Overs--------------------------------------------------------------
all_player_pras_overs <-
  all_player_pras |> 
  select(-OutcomeKey_unders, -OutcomeKey, -MarketKey, -EventKey) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(over_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(over_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_over) - min(implied_prob_over)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_pras_overs_to_bet <-
  all_player_pras_overs |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_over_last_10 >= 0.1 & diff_over_2023_24 >= 0.05) |> 
  filter(over_price >= 1.3) 

# Unders-------------------------------------------------------------
all_player_pras_unders <-
  all_player_pras |> 
  select(-OutcomeKey_unders, -OutcomeKey, -MarketKey, -EventKey) |>
  filter(!is.na(under_price)) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(under_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(under_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_under) - min(implied_prob_under)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_pras_unders_to_bet <-
  all_player_pras_unders |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_under_last_10 >= 0.05 & diff_under_2023_24 >= 0.05) |> 
  filter(under_price >= 1.3)

#===============================================================================
# Player Steals
#===============================================================================

# Overs--------------------------------------------------------------
all_player_steals_overs <-
  all_player_steals |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(over_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(over_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 1) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_over) - min(implied_prob_over)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_steals_overs_to_bet <-
  all_player_steals_overs |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_over_last_10 >= 0.1 & diff_over_2023_24 >= 0.05) |> 
  filter(over_price >= 1.3) 

# Unders-------------------------------------------------------------
all_player_steals_unders <-
  all_player_steals |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |>
  filter(!is.na(under_price)) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(under_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(under_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 1) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_under) - min(implied_prob_under)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_steals_unders_to_bet <-
  all_player_steals_unders |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_under_last_10 >= 0.05 & diff_under_2023_24 >= 0.05) |> 
  filter(under_price >= 1.3)

#===============================================================================
# Player Blocks
#===============================================================================

# Overs--------------------------------------------------------------
all_player_blocks_overs <-
  all_player_blocks |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(over_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(over_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 1) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_over) - min(implied_prob_over)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_blocks_overs_to_bet <-
  all_player_blocks_overs |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_over_last_10 >= 0.1 & diff_over_2023_24 >= 0.05) |> 
  filter(over_price >= 1.3) 

# Unders-------------------------------------------------------------
all_player_blocks_unders <-
  all_player_blocks |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |>
  filter(!is.na(under_price)) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(under_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(under_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 1) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_under) - min(implied_prob_under)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_blocks_unders_to_bet <-
  all_player_blocks_unders |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_under_last_10 >= 0.05 & diff_under_2023_24 >= 0.05) |> 
  filter(under_price >= 1.3)

#===============================================================================
# Player Threes
#===============================================================================

# Overs--------------------------------------------------------------
all_player_threes_overs <-
  all_player_threes |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(over_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(over_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 2) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_over) - min(implied_prob_over)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_threes_overs_to_bet <-
  all_player_threes_overs |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_over_last_10 >= 0.1 & diff_over_2023_24 >= 0.05) |> 
  filter(over_price >= 1.3) 
 
# Unders-------------------------------------------------------------
all_player_threes_unders <-
  all_player_threes |> 
  select(-outcome_name, -outcome_name_under, -OutcomeKey_unders, -OutcomeKey, -group_by_header, -MarketKey, -EventKey) |>
  filter(!is.na(under_price)) |> 
  group_by(player_name, line, agency) |>
  arrange(player_name, line, desc(under_price)) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  arrange(player_name, line, desc(under_price)) |> 
  group_by(player_name, line) |>
  filter(n() > 1) |>
  slice_head(n = 2) |>
  mutate(variation = max(implied_prob_under) - min(implied_prob_under)) |>
  ungroup() |>
  arrange(desc(variation), player_name, line)

player_threes_unders_to_bet <-
  all_player_threes_unders |> 
  group_by(player_name, line) |>
  slice_head(n = 1) |> 
  ungroup() |>
  arrange(desc(variation), player_name, line) |> 
  filter(variation >= 0.025) |> 
  filter(diff_under_last_10 >= 0.05 & diff_under_2023_24 >= 0.05) |> 
  filter(under_price >= 1.3)
```

# All Overs

```{r}
all_overs <- 
  bind_rows(
    player_points_overs_to_bet,
    player_rebounds_overs_to_bet,
    player_assists_overs_to_bet,
    player_pras_overs_to_bet,
    player_steals_overs_to_bet,
    player_blocks_overs_to_bet,
    player_threes_overs_to_bet
  ) |> 
  arrange(agency,match, desc(variation), desc(diff_over_last_10)) |> 
  select(player_team, player_name, market_name, agency, line,over_price, diff_over_last_10, variation, fixture_difficulty)

all_overs
```

# All Unders

```{r}
all_unders <- 
  bind_rows(
    player_points_unders_to_bet,
    player_rebounds_unders_to_bet,
    player_assists_unders_to_bet,
    player_pras_unders_to_bet,
    player_steals_unders_to_bet,
    player_blocks_unders_to_bet,
    player_threes_unders_to_bet
  ) |> 
  arrange(agency, match, desc(variation), desc(diff_under_last_10)) |> 
  select(player_team, player_name, market_name, agency, line,under_price, diff_under_last_10, variation, fixture_difficulty)

all_unders
```

# Unders SGM

```{r}
all_unders <- 
  bind_rows(
    all_player_rebounds_unders,
    all_player_points_unders,
    all_player_assists_unders
  )

# Unders Same Player Multi Method-----------------------------------------------

# Rebounds
rebound_unders <- 
  all_unders |>
  filter(market_name == "Player Rebounds") |>
  select(
    match,
    agency,
    player_team,
    player_name,
    rebound_line = line,
    rebound_under_price = under_price,
    rebound_diff_under_2023_24 = diff_under_2023_24,
    rebound_diff_under_last_10 = diff_under_last_10
  )

# Points
point_unders <- 
  all_unders |>
  filter(market_name == "Player Points") |>
  select(
    match,
    agency,
    player_team,
    player_name,
    point_line = line,
    point_under_price = under_price,
    point_diff_under_2023_24 = diff_under_2023_24,
    point_diff_under_last_10 = diff_under_last_10
  )

# Assists
assist_unders <- 
  all_unders |>
  filter(market_name == "Player Assists") |>
  filter(!is.na(under_price)) |> 
  select(
    match,
    agency,
    player_team,
    player_name,
    assist_line = line,
    assist_under_price = under_price,
    assist_diff_under_2023_24 = diff_under_2023_24,
    assist_diff_under_last_10 = diff_under_last_10
  )

# Join Together
unders_same_player_multi_method_1 <-
  rebound_unders |>
  left_join(point_unders,
            by = c("match", "agency", "player_team", "player_name")) |>
  filter(agency != "Unibet") |> 
  filter(
    rebound_diff_under_last_10 > 0.1 &
      point_diff_under_last_10 > 0.1 &
      rebound_diff_under_2023_24 > 0.05 &
      point_diff_under_2023_24 > 0.05
  ) |> 
  mutate(overall_diff_under_last_10 = (rebound_diff_under_last_10 * point_diff_under_last_10),
         overall_diff_under_2023_24 = (rebound_diff_under_2023_24 * point_diff_under_2023_24)) |> 
  mutate(uncorrelated_price = (rebound_under_price * point_under_price)) |> 
  arrange(match, player_name, player_team, desc(uncorrelated_price)) |> 
  group_by(match, player_name, player_team, point_line, rebound_line) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  filter(uncorrelated_price <= 4 & uncorrelated_price >= 2.85)

unders_same_player_multi_method_2 <-
    rebound_unders |>
  left_join(assist_unders,
            by = c("match", "agency", "player_team", "player_name")) |>
  filter(agency != "Unibet") |> 
  filter(
    rebound_diff_under_last_10 > 0.1 &
      assist_diff_under_last_10 > 0.1 &
      rebound_diff_under_2023_24 > 0.05 &
      assist_diff_under_2023_24 > 0.05
  ) |> 
  mutate(overall_diff_under_last_10 = (rebound_diff_under_last_10 * assist_diff_under_last_10),
         overall_diff_under_2023_24 = (rebound_diff_under_2023_24 * assist_diff_under_2023_24)) |> 
  mutate(uncorrelated_price = (rebound_under_price * assist_under_price)) |> 
  arrange(match, player_name, player_team, desc(uncorrelated_price)) |> 
  group_by(match, player_name, player_team, assist_line, rebound_line) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  filter(uncorrelated_price <= 4 & uncorrelated_price >= 2.85)

unders_same_player_multi_method_3 <-
    point_unders |>
  left_join(assist_unders,
            by = c("match", "agency", "player_team", "player_name")) |>
  filter(agency != "Unibet") |> 
  filter(
    point_diff_under_last_10 > 0.1 &
      assist_diff_under_last_10 > 0.1 &
      point_diff_under_2023_24 > 0.05 &
      assist_diff_under_2023_24 > 0.05
  ) |> 
  mutate(overall_diff_under_last_10 = (point_diff_under_last_10 * assist_diff_under_last_10),
         overall_diff_under_2023_24 = (point_diff_under_2023_24 * assist_diff_under_2023_24)) |> 
  mutate(uncorrelated_price = (point_under_price * assist_under_price)) |> 
  arrange(match, player_name, player_team, desc(uncorrelated_price)) |> 
  group_by(match, player_name, player_team, assist_line, point_line) |>
  slice_head(n = 1) |> 
  ungroup() |> 
  filter(uncorrelated_price <= 4 & uncorrelated_price >= 2.85)

unders_same_player_multi_method <-
  bind_rows(unders_same_player_multi_method_1,
            unders_same_player_multi_method_2,
            unders_same_player_multi_method_3)
```
